/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */
import org.opensearch.gradle.test.RestIntegTestTask

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.yaml-rest-test'
apply plugin: 'checkstyle'

def pluginName = 'opensearch-security'
def pluginDescription = 'Provide access control related features for OpenSearch'
def projectPath = 'org.opensearch'
def pathToPlugin = 'security'
def pluginClassName = 'OpenSearchSecurityPlugin'

tasks.register("preparePluginPathDirs") {
    mustRunAfter clean
    doLast {
        def newPath = pathToPlugin.replace(".", "/")
        mkdir "src/main/java/org/opensearch/$newPath"
        mkdir "src/test/java/org/opensearch/$newPath"
        mkdir "src/yamlRestTest/java/org/opensearch/$newPath"
    }
}

opensearchplugin {
    name pluginName
    description pluginDescription
    classname "${projectPath}.${pathToPlugin}.${pluginClassName}"
    licenseFile rootProject.file('LICENSE.txt')
    noticeFile rootProject.file('NOTICE.txt')
}

// This requires an additional Jar not published as part of build-tools
loggerUsageCheck.enabled = false

// No need to validate pom, as we do not upload to maven/sonatype
validateNebulaPom.enabled = false

buildscript {
    ext {
        isSnapshot = "true" == System.getProperty("build.snapshot", "true")
        opensearch_version = System.getProperty("opensearch.version", "2.0.0-rc1-SNAPSHOT")
        opendistro_plugin_version = System.getProperty("bwc.version", "1.13.0.1")
        buildVersionQualifier = System.getProperty("build.version_qualifier", "rc1")
        // 2.0.0-rc1-SNAPSHOT -> 2.0.0.0-rc1-SNAPSHOT
        version_tokens = opensearch_version.tokenize('-')
        opensearch_build = version_tokens[0] + '.0'
        if (buildVersionQualifier) {
            opensearch_build += "-${buildVersionQualifier}"
        }
        if (isSnapshot) {
            opensearch_build += "-SNAPSHOT"
        }
    }

    repositories {
        mavenLocal()
        maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.opensearch.gradle:build-tools:${opensearch_version}"
    }
}

repositories {
    mavenLocal()
    maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    implementation "org.opensearch.plugin:transport-netty4-client:${opensearch_version}"
    implementation "org.opensearch.client:opensearch-rest-high-level-client:${opensearch_version}"
    implementation 'com.google.guava:guava:30.0-jre'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'commons-cli:commons-cli:1.3.1'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.67'
    implementation 'org.ldaptive:ldaptive:1.2.3'
    implementation 'org.apache.httpcomponents:httpclient-cache:4.5.13'
    implementation 'io.jsonwebtoken:jjwt-api:0.10.8'
    implementation("org.apache.cxf:cxf-rt-rs-security-jose:3.4.5") {
        exclude(group: 'jakarta.activation', module: 'jakarta.activation-api')
    }
    implementation 'com.github.wnameless:json-flattener:0.5.0'
    implementation 'com.flipkart.zjsonpatch:zjsonpatch:0.4.4'
    implementation 'org.apache.kafka:kafka-clients:2.8.1'
    implementation 'com.onelogin:java-saml:2.9.0'
    implementation 'com.onelogin:java-saml-core:2.9.0'

    implementation 'org.apache.cxf:cxf-rt-rs-json-basic:3.5.2'

    testImplementation 'org.apache.camel:camel-xmlsecurity:3.14.2'

    implementation 'net.shibboleth.utilities:java-support:7.5.2'
    // implementation 'org.opensaml:opensaml:2.6.4'
    implementation 'org.opensaml:opensaml-core:3.4.5'
    implementation 'org.opensaml:opensaml-security-impl:3.4.5'
    implementation 'org.opensaml:opensaml-security-api:3.4.5'
    implementation 'org.opensaml:opensaml-xmlsec-api:3.4.5'
    implementation 'org.opensaml:opensaml-xmlsec-impl:3.4.5'
    implementation 'org.opensaml:opensaml-saml-api:3.4.5'
    implementation ('org.opensaml:opensaml-saml-impl:3.4.5') {
        exclude(group: 'org.apache.velocity', module: 'velocity')
    }
    implementation 'commons-lang:commons-lang:2.4'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    // implementation "com.fasterxml.jackson.core:jackson-databind:${props.getProperty('jackson')}"
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.10.8'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.10.8'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation "org.opensearch.plugin:reindex-client:${opensearch_version}"
    testImplementation "org.opensearch:opensearch-ssl-config:${opensearch_version}"
    testImplementation "org.opensearch.plugin:percolator-client:${opensearch_version}"
    testImplementation "org.opensearch.plugin:lang-mustache-client:${opensearch_version}"
    testImplementation "org.opensearch.plugin:parent-join-client:${opensearch_version}"
    testImplementation "org.opensearch.plugin:aggs-matrix-stats-client:${opensearch_version}"
    testImplementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    testImplementation 'commons-io:commons-io:2.7'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.apache.httpcomponents:fluent-hc:4.5.13'
    testImplementation 'org.springframework.kafka:spring-kafka-test:2.8.5'
    testImplementation 'javax.servlet:servlet-api:2.5'
    testImplementation 'com.unboundid:unboundid-ldapsdk:4.0.9'
    testImplementation 'com.github.stephenc.jcip:jcip-annotations:1.0-1'
    testImplementation 'org.apache.kafka:kafka_2.13:2.8.1'
    testImplementation 'org.apache.kafka:kafka_2.13:2.8.1:test'
    testImplementation 'org.apache.kafka:kafka-clients:2.8.1:test'

    def jacksonVersion = "2.12.6"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    compileOnly "org.opensearch:opensearch:${opensearch_version}"

}

test {
    include '**/*Tests.class'
}

checkstyle {
    configFile file("config/checkstyle/sun_checks.xml")
}

tasks.withType(Checkstyle) {
    showViolations true
    reports {
        ignoreFailures = false
    }
}

allprojects {
    tasks.withType(Javadoc).all { enabled = false }
}